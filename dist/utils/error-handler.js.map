{"version":3,"sources":["../../src/utils/error-handler.js"],"names":["dotenv","config","path","errorHandler","error","req","res","next","console","log","stack","process","env","NODE_ENV","message","name","code","status","json","errors"],"mappings":"kGAAA,sD,oFAEAA,mBAAOC,MAAP,CAAc,CAAEC,IAAI,CAAE,SAAR,CAAd,EAEO,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,GAAR,CAAaC,GAAb,CAAkBC,IAAlB,CAA2B,CAEnDC,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAEA,GAAIA,KAAK,CAACM,KAAN,EAAeC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAA5C,CAA2D,CAEvDL,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAEAI,OAAO,CAACJ,KAAR,CAAc,CACVU,OAAO,CAAEV,KAAK,CAACU,OAAN,EAAiBV,KAAK,CAACW,IADtB,CAAd,CAGH,CAED,GAAIX,KAAK,CAACY,IAAN,GAAe,iBAAnB,CAAsC,CAClC,MAAOV,CAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBd,KAArB,CACV,CAED,GAAIA,KAAK,CAACY,IAAN,GAAe,KAAnB,CAA0B,CACtB,MAAOV,CAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBd,KAArB,CACV,CAED,GAAIA,KAAK,CAACM,KAAN,EAAeC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAA5C,CAA2D,CACvDL,OAAO,CAACJ,KAAR,CAAcA,KAAd,CAAqBA,KAAK,CAACM,KAA3B,CACH,CAGD,GAAIN,KAAK,CAACe,MAAV,CAAkB,CACd,MAAOb,CAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,CACxBJ,OAAO,CAAE,iBADe,CAExBK,MAAM,CAAEf,KAAK,CAACe,MAFU,CAArB,CAIV,CAED,MAAOb,CAAAA,GAAG,CAACW,MAAJ,CAAWb,KAAK,CAACa,MAAN,EAAgB,GAA3B,EAAgCC,IAAhC,CAAqC,CACxCJ,OAAO,CAAEV,KAAK,CAACU,OAAN,EAAiBV,KAAK,CAACW,IAAvB,EAA+BX,KADA,CAExCa,MAAM,CAAEb,KAAK,CAACa,MAF0B,CAArC,CAIV,CArCM,C","sourcesContent":["import dotenv from 'dotenv';\n\ndotenv.config({ path: '../.env' });\n\nexport const errorHandler = (error, req, res, next) => {\n\n    console.log(error);\n\n    if (error.stack && process.env.NODE_ENV === 'development') {\n\n        console.log(error);\n\n        console.error({\n            message: error.message || error.name\n        });\n    }\n\n    if (error.code === 'LIMIT_FILE_SIZE') {\n        return res.status(400).json(error);\n    }\n\n    if (error.code === 11000) {\n        return res.status(400).json(error);\n    }\n\n    if (error.stack && process.env.NODE_ENV === 'development') {\n        console.error(error, error.stack);\n    }\n\n\n    if (error.errors) {\n        return res.status(400).json({\n            message: 'Invalid request',\n            errors: error.errors\n        });\n    }\n\n    return res.status(error.status || 500).json({\n        message: error.message || error.name || error,\n        status: error.status \n    });\n};\n"],"file":"error-handler.js"}