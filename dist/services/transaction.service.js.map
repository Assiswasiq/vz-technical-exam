{"version":3,"sources":["../../src/services/transaction.service.js"],"names":["TransactionService","fileHandler","__fileHandler","__method","credit","debit","readFile","__dirname","data","accountDetails","existedTransactions","newTransaction","createCurrentTimestamp","type","balance","amount","writeFile","accountBalance","Helper","module","exports"],"mappings":"qVAAA,8CACA,kDACA,0BAEA,iCAIA,0D,8/JAIMA,CAAAA,kB,kHAEF,4BAAYC,WAAZ,CAAyB,oDACrB,wBACA,MAAKC,aAAL,CAAqBD,WAArB,CACA,MAAKE,QAAL,CAAgB,CACZC,MAAM,CAAE,eADI,CAEZC,KAAK,CAAE,cAFK,CAAhB,CAHqB,YAOxB,C,iKAED,kKACW,KAAKH,aAAL,CAAmBI,QAAnB,CAA4BC,SAA5B,CAAuC,+BAAvC,CADX,4D,iPAIA,kBAAwBC,IAAxB,kMACiC,MAAKN,aAAL,CAAmBI,QAAnB,CAA4BC,SAA5B,CAAuC,0BAAvC,CADjC,QACUE,cADV,uCAEsC,MAAKP,aAAL,CAAmBI,QAAnB,CAA4BC,SAA5B,CAAuC,+BAAvC,CAFtC,QAEUG,mBAFV,gBAGUC,cAHV,8BAG6B,KAAM,cAHnC,EAGgDH,IAHhD,MAGsD,gBAAiB,KAAKI,sBAAL,EAHvE,gBAIU,KAAKV,aAJf,cAIuCK,SAJvC,yBAIiG,MAAK,KAAKJ,QAAL,CAAcK,IAAI,CAACK,IAAnB,CAAL,EAA+BJ,cAAc,CAACK,OAA9C,CAAuDN,IAAI,CAACO,MAA5D,CAJjG,mDAIgF,SAJhF,qDAI6BC,SAJ7B,gCAIkD,0BAJlD,+CAKU,MAAKd,aAAL,CAAmBc,SAAnB,CAA6BT,SAA7B,CAAwC,+BAAxC,8BAA6EG,mBAA7E,oBAAuGC,cAAvG,IALV,0CAMWA,cANX,+D,+NASA,kBAAoBM,cAApB,CAAoCF,MAApC,sJACWE,cAAc,CAAGF,MAD5B,yD,sNAIA,kBAAmBE,cAAnB,CAAmCF,MAAnC,0HACOA,MAAM,CAAGE,cADhB,+BACsC,sCAAiB,uBAAjB,CADtC,yCAEWA,cAAc,CAAGF,MAF5B,yD,kIA5B6BG,c,EAmCjCC,MAAM,CAACC,OAAP,CAAiBpB,kBAAjB","sourcesContent":["import fs from 'fs';\nimport util from 'util';\nimport { v4 as uuidv1 } from 'uuid';\n\nimport {\n    Helper\n} from '../shared';\n\nimport {\n    generateMessages\n} from '../utils/generate-message';\n\nclass TransactionService extends Helper {\n\n    constructor(fileHandler) {\n        super();\n        this.__fileHandler = fileHandler;\n        this.__method = {\n            credit: 'creditAccount',\n            debit: 'debitAccount'\n        }\n    }\n\n    async getTransactionHistory() {\n        return this.__fileHandler.readFile(__dirname, '../database/transactions.json');\n    }\n\n    async createTransaction(data) {\n        const accountDetails = await this.__fileHandler.readFile(__dirname, '../database/account.json');\n        const existedTransactions = await this.__fileHandler.readFile(__dirname, '../database/transactions.json');\n        const newTransaction = { 'id': uuidv1(), ...data, 'effectiveDate': this.createCurrentTimestamp()};\n        await this.__fileHandler.writeFile(__dirname, '../database/account.json', { 'balance': await this[this.__method[data.type]](accountDetails.balance, data.amount) })\n        await this.__fileHandler.writeFile(__dirname, '../database/transactions.json', [...existedTransactions, { ...newTransaction }])\n        return newTransaction\n    }\n\n    async creditAccount(accountBalance, amount) {\n        return accountBalance + amount;\n    }\n\n    async debitAccount(accountBalance, amount) {\n        if(amount > accountBalance) throw generateMessages('IN_SUFFICIENT_BALANCE')\n        return accountBalance - amount;\n    }\n\n}\n\nmodule.exports = TransactionService;"],"file":"transaction.service.js"}